{"format": "torch", "nodes": [{"name": "encoder", "id": 137277946094608, "class_name": "MixVisionTransformerEncoder(\n  (patch_embed1): OverlapPatchEmbed(\n    (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))\n    (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)\n  )\n  (patch_embed2): OverlapPatchEmbed(\n    (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n    (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n  )\n  (patch_embed3): OverlapPatchEmbed(\n    (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n    (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)\n  )\n  (patch_embed4): OverlapPatchEmbed(\n    (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n    (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)\n  )\n  (block1): ModuleList(\n    (0): Block(\n      (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)\n      (attn): Attention(\n        (q): Linear(in_features=64, out_features=64, bias=True)\n        (kv): Linear(in_features=64, out_features=128, bias=True)\n        (attn_drop): Dropout(p=0.0, inplace=False)\n        (proj): Linear(in_features=64, out_features=64, bias=True)\n        (proj_drop): Dropout(p=0.0, inplace=False)\n        (sr): Conv2d(64, 64, kernel_size=(8, 8), stride=(8, 8))\n        (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)\n      )\n      (drop_path): Identity()\n      (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)\n      (mlp): Mlp(\n        (fc1): Linear(in_features=64, out_features=256, bias=True)\n        (dwconv): DWConv(\n          (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)\n        )\n        (act): GELU(approximate='none')\n        (fc2): Linear(in_features=256, out_features=64, bias=True)\n        (drop): Dropout(p=0.0, inplace=False)\n      )\n    )\n    (1-2): 2 x Block(\n      (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)\n      (attn): Attention(\n        (q): Linear(in_features=64, out_features=64, bias=True)\n        (kv): Linear(in_features=64, out_features=128, bias=True)\n        (attn_drop): Dropout(p=0.0, inplace=False)\n        (proj): Linear(in_features=64, out_features=64, bias=True)\n        (proj_drop): Dropout(p=0.0, inplace=False)\n        (sr): Conv2d(64, 64, kernel_size=(8, 8), stride=(8, 8))\n        (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)\n      )\n      (drop_path): DropPath()\n      (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)\n      (mlp): Mlp(\n        (fc1): Linear(in_features=64, out_features=256, bias=True)\n        (dwconv): DWConv(\n          (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)\n        )\n        (act): GELU(approximate='none')\n        (fc2): Linear(in_features=256, out_features=64, bias=True)\n        (drop): Dropout(p=0.0, inplace=False)\n      )\n    )\n  )\n  (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)\n  (block2): ModuleList(\n    (0-5): 6 x Block(\n      (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)\n      (attn): Attention(\n        (q): Linear(in_features=128, out_features=128, bias=True)\n        (kv): Linear(in_features=128, out_features=256, bias=True)\n        (attn_drop): Dropout(p=0.0, inplace=False)\n        (proj): Linear(in_features=128, out_features=128, bias=True)\n        (proj_drop): Dropout(p=0.0, inplace=False)\n        (sr): Conv2d(128, 128, kernel_size=(4, 4), stride=(4, 4))\n        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n      )\n      (drop_path): DropPath()\n      (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)\n      (mlp): Mlp(\n        (fc1): Linear(in_features=128, out_features=512, bias=True)\n        (dwconv): DWConv(\n          (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)\n        )\n        (act): GELU(approximate='none')\n        (fc2): Linear(in_features=512, out_features=128, bias=True)\n        (drop): Dropout(p=0.0, inplace=False)\n      )\n    )\n  )\n  (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)\n  (block3): ModuleList(\n    (0-39): 40 x Block(\n      (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)\n      (attn): Attention(\n        (q): Linear(in_features=320, out_features=320, bias=True)\n        (kv): Linear(in_features=320, out_features=640, bias=True)\n        (attn_drop): Dropout(p=0.0, inplace=False)\n        (proj): Linear(in_features=320, out_features=320, bias=True)\n        (proj_drop): Dropout(p=0.0, inplace=False)\n        (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))\n        (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)\n      )\n      (drop_path): DropPath()\n      (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)\n      (mlp): Mlp(\n        (fc1): Linear(in_features=320, out_features=1280, bias=True)\n        (dwconv): DWConv(\n          (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)\n        )\n        (act): GELU(approximate='none')\n        (fc2): Linear(in_features=1280, out_features=320, bias=True)\n        (drop): Dropout(p=0.0, inplace=False)\n      )\n    )\n  )\n  (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)\n  (block4): ModuleList(\n    (0-2): 3 x Block(\n      (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)\n      (attn): Attention(\n        (q): Linear(in_features=512, out_features=512, bias=True)\n        (kv): Linear(in_features=512, out_features=1024, bias=True)\n        (attn_drop): Dropout(p=0.0, inplace=False)\n        (proj): Linear(in_features=512, out_features=512, bias=True)\n        (proj_drop): Dropout(p=0.0, inplace=False)\n      )\n      (drop_path): DropPath()\n      (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)\n      (mlp): Mlp(\n        (fc1): Linear(in_features=512, out_features=2048, bias=True)\n        (dwconv): DWConv(\n          (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)\n        )\n        (act): GELU(approximate='none')\n        (fc2): Linear(in_features=2048, out_features=512, bias=True)\n        (drop): Dropout(p=0.0, inplace=False)\n      )\n    )\n  )\n  (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)\n)", "parameters": [["patch_embed1.proj.weight", [64, 3, 7, 7]], ["patch_embed1.proj.bias", [64]], ["patch_embed1.norm.weight", [64]], ["patch_embed1.norm.bias", [64]], ["patch_embed2.proj.weight", [128, 64, 3, 3]], ["patch_embed2.proj.bias", [128]], ["patch_embed2.norm.weight", [128]], ["patch_embed2.norm.bias", [128]], ["patch_embed3.proj.weight", [320, 128, 3, 3]], ["patch_embed3.proj.bias", [320]], ["patch_embed3.norm.weight", [320]], ["patch_embed3.norm.bias", [320]], ["patch_embed4.proj.weight", [512, 320, 3, 3]], ["patch_embed4.proj.bias", [512]], ["patch_embed4.norm.weight", [512]], ["patch_embed4.norm.bias", [512]], ["block1.0.norm1.weight", [64]], ["block1.0.norm1.bias", [64]], ["block1.0.attn.q.weight", [64, 64]], ["block1.0.attn.q.bias", [64]], ["block1.0.attn.kv.weight", [128, 64]], ["block1.0.attn.kv.bias", [128]], ["block1.0.attn.proj.weight", [64, 64]], ["block1.0.attn.proj.bias", [64]], ["block1.0.attn.sr.weight", [64, 64, 8, 8]], ["block1.0.attn.sr.bias", [64]], ["block1.0.attn.norm.weight", [64]], ["block1.0.attn.norm.bias", [64]], ["block1.0.norm2.weight", [64]], ["block1.0.norm2.bias", [64]], ["block1.0.mlp.fc1.weight", [256, 64]], ["block1.0.mlp.fc1.bias", [256]], ["block1.0.mlp.dwconv.dwconv.weight", [256, 1, 3, 3]], ["block1.0.mlp.dwconv.dwconv.bias", [256]], ["block1.0.mlp.fc2.weight", [64, 256]], ["block1.0.mlp.fc2.bias", [64]], ["block1.1.norm1.weight", [64]], ["block1.1.norm1.bias", [64]], ["block1.1.attn.q.weight", [64, 64]], ["block1.1.attn.q.bias", [64]], ["block1.1.attn.kv.weight", [128, 64]], ["block1.1.attn.kv.bias", [128]], ["block1.1.attn.proj.weight", [64, 64]], ["block1.1.attn.proj.bias", [64]], ["block1.1.attn.sr.weight", [64, 64, 8, 8]], ["block1.1.attn.sr.bias", [64]], ["block1.1.attn.norm.weight", [64]], ["block1.1.attn.norm.bias", [64]], ["block1.1.norm2.weight", [64]], ["block1.1.norm2.bias", [64]], ["block1.1.mlp.fc1.weight", [256, 64]], ["block1.1.mlp.fc1.bias", [256]], ["block1.1.mlp.dwconv.dwconv.weight", [256, 1, 3, 3]], ["block1.1.mlp.dwconv.dwconv.bias", [256]], ["block1.1.mlp.fc2.weight", [64, 256]], ["block1.1.mlp.fc2.bias", [64]], ["block1.2.norm1.weight", [64]], ["block1.2.norm1.bias", [64]], ["block1.2.attn.q.weight", [64, 64]], ["block1.2.attn.q.bias", [64]], ["block1.2.attn.kv.weight", [128, 64]], ["block1.2.attn.kv.bias", [128]], ["block1.2.attn.proj.weight", [64, 64]], ["block1.2.attn.proj.bias", [64]], ["block1.2.attn.sr.weight", [64, 64, 8, 8]], ["block1.2.attn.sr.bias", [64]], ["block1.2.attn.norm.weight", [64]], ["block1.2.attn.norm.bias", [64]], ["block1.2.norm2.weight", [64]], ["block1.2.norm2.bias", [64]], ["block1.2.mlp.fc1.weight", [256, 64]], ["block1.2.mlp.fc1.bias", [256]], ["block1.2.mlp.dwconv.dwconv.weight", [256, 1, 3, 3]], ["block1.2.mlp.dwconv.dwconv.bias", [256]], ["block1.2.mlp.fc2.weight", [64, 256]], ["block1.2.mlp.fc2.bias", [64]], ["norm1.weight", [64]], ["norm1.bias", [64]], ["block2.0.norm1.weight", [128]], ["block2.0.norm1.bias", [128]], ["block2.0.attn.q.weight", [128, 128]], ["block2.0.attn.q.bias", [128]], ["block2.0.attn.kv.weight", [256, 128]], ["block2.0.attn.kv.bias", [256]], ["block2.0.attn.proj.weight", [128, 128]], ["block2.0.attn.proj.bias", [128]], ["block2.0.attn.sr.weight", [128, 128, 4, 4]], ["block2.0.attn.sr.bias", [128]], ["block2.0.attn.norm.weight", [128]], ["block2.0.attn.norm.bias", [128]], ["block2.0.norm2.weight", [128]], ["block2.0.norm2.bias", [128]], ["block2.0.mlp.fc1.weight", [512, 128]], ["block2.0.mlp.fc1.bias", [512]], ["block2.0.mlp.dwconv.dwconv.weight", [512, 1, 3, 3]], ["block2.0.mlp.dwconv.dwconv.bias", [512]], ["block2.0.mlp.fc2.weight", [128, 512]], ["block2.0.mlp.fc2.bias", [128]], ["block2.1.norm1.weight", [128]], ["block2.1.norm1.bias", [128]], ["block2.1.attn.q.weight", [128, 128]], ["block2.1.attn.q.bias", [128]], ["block2.1.attn.kv.weight", [256, 128]], ["block2.1.attn.kv.bias", [256]], ["block2.1.attn.proj.weight", [128, 128]], ["block2.1.attn.proj.bias", [128]], ["block2.1.attn.sr.weight", [128, 128, 4, 4]], ["block2.1.attn.sr.bias", [128]], ["block2.1.attn.norm.weight", [128]], ["block2.1.attn.norm.bias", [128]], ["block2.1.norm2.weight", [128]], ["block2.1.norm2.bias", [128]], ["block2.1.mlp.fc1.weight", [512, 128]], ["block2.1.mlp.fc1.bias", [512]], ["block2.1.mlp.dwconv.dwconv.weight", [512, 1, 3, 3]], ["block2.1.mlp.dwconv.dwconv.bias", [512]], ["block2.1.mlp.fc2.weight", [128, 512]], ["block2.1.mlp.fc2.bias", [128]], ["block2.2.norm1.weight", [128]], ["block2.2.norm1.bias", [128]], ["block2.2.attn.q.weight", [128, 128]], ["block2.2.attn.q.bias", [128]], ["block2.2.attn.kv.weight", [256, 128]], ["block2.2.attn.kv.bias", [256]], ["block2.2.attn.proj.weight", [128, 128]], ["block2.2.attn.proj.bias", [128]], ["block2.2.attn.sr.weight", [128, 128, 4, 4]], ["block2.2.attn.sr.bias", [128]], ["block2.2.attn.norm.weight", [128]], ["block2.2.attn.norm.bias", [128]], ["block2.2.norm2.weight", [128]], ["block2.2.norm2.bias", [128]], ["block2.2.mlp.fc1.weight", [512, 128]], ["block2.2.mlp.fc1.bias", [512]], ["block2.2.mlp.dwconv.dwconv.weight", [512, 1, 3, 3]], ["block2.2.mlp.dwconv.dwconv.bias", [512]], ["block2.2.mlp.fc2.weight", [128, 512]], ["block2.2.mlp.fc2.bias", [128]], ["block2.3.norm1.weight", [128]], ["block2.3.norm1.bias", [128]], ["block2.3.attn.q.weight", [128, 128]], ["block2.3.attn.q.bias", [128]], ["block2.3.attn.kv.weight", [256, 128]], ["block2.3.attn.kv.bias", [256]], ["block2.3.attn.proj.weight", [128, 128]], ["block2.3.attn.proj.bias", [128]], ["block2.3.attn.sr.weight", [128, 128, 4, 4]], ["block2.3.attn.sr.bias", [128]], ["block2.3.attn.norm.weight", [128]], ["block2.3.attn.norm.bias", [128]], ["block2.3.norm2.weight", [128]], ["block2.3.norm2.bias", [128]], ["block2.3.mlp.fc1.weight", [512, 128]], ["block2.3.mlp.fc1.bias", [512]], ["block2.3.mlp.dwconv.dwconv.weight", [512, 1, 3, 3]], ["block2.3.mlp.dwconv.dwconv.bias", [512]], ["block2.3.mlp.fc2.weight", [128, 512]], ["block2.3.mlp.fc2.bias", [128]], ["block2.4.norm1.weight", [128]], ["block2.4.norm1.bias", [128]], ["block2.4.attn.q.weight", [128, 128]], ["block2.4.attn.q.bias", [128]], ["block2.4.attn.kv.weight", [256, 128]], ["block2.4.attn.kv.bias", [256]], ["block2.4.attn.proj.weight", [128, 128]], ["block2.4.attn.proj.bias", [128]], ["block2.4.attn.sr.weight", [128, 128, 4, 4]], ["block2.4.attn.sr.bias", [128]], ["block2.4.attn.norm.weight", [128]], ["block2.4.attn.norm.bias", [128]], ["block2.4.norm2.weight", [128]], ["block2.4.norm2.bias", [128]], ["block2.4.mlp.fc1.weight", [512, 128]], ["block2.4.mlp.fc1.bias", [512]], ["block2.4.mlp.dwconv.dwconv.weight", [512, 1, 3, 3]], ["block2.4.mlp.dwconv.dwconv.bias", [512]], ["block2.4.mlp.fc2.weight", [128, 512]], ["block2.4.mlp.fc2.bias", [128]], ["block2.5.norm1.weight", [128]], ["block2.5.norm1.bias", [128]], ["block2.5.attn.q.weight", [128, 128]], ["block2.5.attn.q.bias", [128]], ["block2.5.attn.kv.weight", [256, 128]], ["block2.5.attn.kv.bias", [256]], ["block2.5.attn.proj.weight", [128, 128]], ["block2.5.attn.proj.bias", [128]], ["block2.5.attn.sr.weight", [128, 128, 4, 4]], ["block2.5.attn.sr.bias", [128]], ["block2.5.attn.norm.weight", [128]], ["block2.5.attn.norm.bias", [128]], ["block2.5.norm2.weight", [128]], ["block2.5.norm2.bias", [128]], ["block2.5.mlp.fc1.weight", [512, 128]], ["block2.5.mlp.fc1.bias", [512]], ["block2.5.mlp.dwconv.dwconv.weight", [512, 1, 3, 3]], ["block2.5.mlp.dwconv.dwconv.bias", [512]], ["block2.5.mlp.fc2.weight", [128, 512]], ["block2.5.mlp.fc2.bias", [128]], ["norm2.weight", [128]], ["norm2.bias", [128]], ["block3.0.norm1.weight", [320]], ["block3.0.norm1.bias", [320]], ["block3.0.attn.q.weight", [320, 320]], ["block3.0.attn.q.bias", [320]], ["block3.0.attn.kv.weight", [640, 320]], ["block3.0.attn.kv.bias", [640]], ["block3.0.attn.proj.weight", [320, 320]], ["block3.0.attn.proj.bias", [320]], ["block3.0.attn.sr.weight", [320, 320, 2, 2]], ["block3.0.attn.sr.bias", [320]], ["block3.0.attn.norm.weight", [320]], ["block3.0.attn.norm.bias", [320]], ["block3.0.norm2.weight", [320]], ["block3.0.norm2.bias", [320]], ["block3.0.mlp.fc1.weight", [1280, 320]], ["block3.0.mlp.fc1.bias", [1280]], ["block3.0.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.0.mlp.dwconv.dwconv.bias", [1280]], ["block3.0.mlp.fc2.weight", [320, 1280]], ["block3.0.mlp.fc2.bias", [320]], ["block3.1.norm1.weight", [320]], ["block3.1.norm1.bias", [320]], ["block3.1.attn.q.weight", [320, 320]], ["block3.1.attn.q.bias", [320]], ["block3.1.attn.kv.weight", [640, 320]], ["block3.1.attn.kv.bias", [640]], ["block3.1.attn.proj.weight", [320, 320]], ["block3.1.attn.proj.bias", [320]], ["block3.1.attn.sr.weight", [320, 320, 2, 2]], ["block3.1.attn.sr.bias", [320]], ["block3.1.attn.norm.weight", [320]], ["block3.1.attn.norm.bias", [320]], ["block3.1.norm2.weight", [320]], ["block3.1.norm2.bias", [320]], ["block3.1.mlp.fc1.weight", [1280, 320]], ["block3.1.mlp.fc1.bias", [1280]], ["block3.1.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.1.mlp.dwconv.dwconv.bias", [1280]], ["block3.1.mlp.fc2.weight", [320, 1280]], ["block3.1.mlp.fc2.bias", [320]], ["block3.2.norm1.weight", [320]], ["block3.2.norm1.bias", [320]], ["block3.2.attn.q.weight", [320, 320]], ["block3.2.attn.q.bias", [320]], ["block3.2.attn.kv.weight", [640, 320]], ["block3.2.attn.kv.bias", [640]], ["block3.2.attn.proj.weight", [320, 320]], ["block3.2.attn.proj.bias", [320]], ["block3.2.attn.sr.weight", [320, 320, 2, 2]], ["block3.2.attn.sr.bias", [320]], ["block3.2.attn.norm.weight", [320]], ["block3.2.attn.norm.bias", [320]], ["block3.2.norm2.weight", [320]], ["block3.2.norm2.bias", [320]], ["block3.2.mlp.fc1.weight", [1280, 320]], ["block3.2.mlp.fc1.bias", [1280]], ["block3.2.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.2.mlp.dwconv.dwconv.bias", [1280]], ["block3.2.mlp.fc2.weight", [320, 1280]], ["block3.2.mlp.fc2.bias", [320]], ["block3.3.norm1.weight", [320]], ["block3.3.norm1.bias", [320]], ["block3.3.attn.q.weight", [320, 320]], ["block3.3.attn.q.bias", [320]], ["block3.3.attn.kv.weight", [640, 320]], ["block3.3.attn.kv.bias", [640]], ["block3.3.attn.proj.weight", [320, 320]], ["block3.3.attn.proj.bias", [320]], ["block3.3.attn.sr.weight", [320, 320, 2, 2]], ["block3.3.attn.sr.bias", [320]], ["block3.3.attn.norm.weight", [320]], ["block3.3.attn.norm.bias", [320]], ["block3.3.norm2.weight", [320]], ["block3.3.norm2.bias", [320]], ["block3.3.mlp.fc1.weight", [1280, 320]], ["block3.3.mlp.fc1.bias", [1280]], ["block3.3.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.3.mlp.dwconv.dwconv.bias", [1280]], ["block3.3.mlp.fc2.weight", [320, 1280]], ["block3.3.mlp.fc2.bias", [320]], ["block3.4.norm1.weight", [320]], ["block3.4.norm1.bias", [320]], ["block3.4.attn.q.weight", [320, 320]], ["block3.4.attn.q.bias", [320]], ["block3.4.attn.kv.weight", [640, 320]], ["block3.4.attn.kv.bias", [640]], ["block3.4.attn.proj.weight", [320, 320]], ["block3.4.attn.proj.bias", [320]], ["block3.4.attn.sr.weight", [320, 320, 2, 2]], ["block3.4.attn.sr.bias", [320]], ["block3.4.attn.norm.weight", [320]], ["block3.4.attn.norm.bias", [320]], ["block3.4.norm2.weight", [320]], ["block3.4.norm2.bias", [320]], ["block3.4.mlp.fc1.weight", [1280, 320]], ["block3.4.mlp.fc1.bias", [1280]], ["block3.4.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.4.mlp.dwconv.dwconv.bias", [1280]], ["block3.4.mlp.fc2.weight", [320, 1280]], ["block3.4.mlp.fc2.bias", [320]], ["block3.5.norm1.weight", [320]], ["block3.5.norm1.bias", [320]], ["block3.5.attn.q.weight", [320, 320]], ["block3.5.attn.q.bias", [320]], ["block3.5.attn.kv.weight", [640, 320]], ["block3.5.attn.kv.bias", [640]], ["block3.5.attn.proj.weight", [320, 320]], ["block3.5.attn.proj.bias", [320]], ["block3.5.attn.sr.weight", [320, 320, 2, 2]], ["block3.5.attn.sr.bias", [320]], ["block3.5.attn.norm.weight", [320]], ["block3.5.attn.norm.bias", [320]], ["block3.5.norm2.weight", [320]], ["block3.5.norm2.bias", [320]], ["block3.5.mlp.fc1.weight", [1280, 320]], ["block3.5.mlp.fc1.bias", [1280]], ["block3.5.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.5.mlp.dwconv.dwconv.bias", [1280]], ["block3.5.mlp.fc2.weight", [320, 1280]], ["block3.5.mlp.fc2.bias", [320]], ["block3.6.norm1.weight", [320]], ["block3.6.norm1.bias", [320]], ["block3.6.attn.q.weight", [320, 320]], ["block3.6.attn.q.bias", [320]], ["block3.6.attn.kv.weight", [640, 320]], ["block3.6.attn.kv.bias", [640]], ["block3.6.attn.proj.weight", [320, 320]], ["block3.6.attn.proj.bias", [320]], ["block3.6.attn.sr.weight", [320, 320, 2, 2]], ["block3.6.attn.sr.bias", [320]], ["block3.6.attn.norm.weight", [320]], ["block3.6.attn.norm.bias", [320]], ["block3.6.norm2.weight", [320]], ["block3.6.norm2.bias", [320]], ["block3.6.mlp.fc1.weight", [1280, 320]], ["block3.6.mlp.fc1.bias", [1280]], ["block3.6.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.6.mlp.dwconv.dwconv.bias", [1280]], ["block3.6.mlp.fc2.weight", [320, 1280]], ["block3.6.mlp.fc2.bias", [320]], ["block3.7.norm1.weight", [320]], ["block3.7.norm1.bias", [320]], ["block3.7.attn.q.weight", [320, 320]], ["block3.7.attn.q.bias", [320]], ["block3.7.attn.kv.weight", [640, 320]], ["block3.7.attn.kv.bias", [640]], ["block3.7.attn.proj.weight", [320, 320]], ["block3.7.attn.proj.bias", [320]], ["block3.7.attn.sr.weight", [320, 320, 2, 2]], ["block3.7.attn.sr.bias", [320]], ["block3.7.attn.norm.weight", [320]], ["block3.7.attn.norm.bias", [320]], ["block3.7.norm2.weight", [320]], ["block3.7.norm2.bias", [320]], ["block3.7.mlp.fc1.weight", [1280, 320]], ["block3.7.mlp.fc1.bias", [1280]], ["block3.7.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.7.mlp.dwconv.dwconv.bias", [1280]], ["block3.7.mlp.fc2.weight", [320, 1280]], ["block3.7.mlp.fc2.bias", [320]], ["block3.8.norm1.weight", [320]], ["block3.8.norm1.bias", [320]], ["block3.8.attn.q.weight", [320, 320]], ["block3.8.attn.q.bias", [320]], ["block3.8.attn.kv.weight", [640, 320]], ["block3.8.attn.kv.bias", [640]], ["block3.8.attn.proj.weight", [320, 320]], ["block3.8.attn.proj.bias", [320]], ["block3.8.attn.sr.weight", [320, 320, 2, 2]], ["block3.8.attn.sr.bias", [320]], ["block3.8.attn.norm.weight", [320]], ["block3.8.attn.norm.bias", [320]], ["block3.8.norm2.weight", [320]], ["block3.8.norm2.bias", [320]], ["block3.8.mlp.fc1.weight", [1280, 320]], ["block3.8.mlp.fc1.bias", [1280]], ["block3.8.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.8.mlp.dwconv.dwconv.bias", [1280]], ["block3.8.mlp.fc2.weight", [320, 1280]], ["block3.8.mlp.fc2.bias", [320]], ["block3.9.norm1.weight", [320]], ["block3.9.norm1.bias", [320]], ["block3.9.attn.q.weight", [320, 320]], ["block3.9.attn.q.bias", [320]], ["block3.9.attn.kv.weight", [640, 320]], ["block3.9.attn.kv.bias", [640]], ["block3.9.attn.proj.weight", [320, 320]], ["block3.9.attn.proj.bias", [320]], ["block3.9.attn.sr.weight", [320, 320, 2, 2]], ["block3.9.attn.sr.bias", [320]], ["block3.9.attn.norm.weight", [320]], ["block3.9.attn.norm.bias", [320]], ["block3.9.norm2.weight", [320]], ["block3.9.norm2.bias", [320]], ["block3.9.mlp.fc1.weight", [1280, 320]], ["block3.9.mlp.fc1.bias", [1280]], ["block3.9.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.9.mlp.dwconv.dwconv.bias", [1280]], ["block3.9.mlp.fc2.weight", [320, 1280]], ["block3.9.mlp.fc2.bias", [320]], ["block3.10.norm1.weight", [320]], ["block3.10.norm1.bias", [320]], ["block3.10.attn.q.weight", [320, 320]], ["block3.10.attn.q.bias", [320]], ["block3.10.attn.kv.weight", [640, 320]], ["block3.10.attn.kv.bias", [640]], ["block3.10.attn.proj.weight", [320, 320]], ["block3.10.attn.proj.bias", [320]], ["block3.10.attn.sr.weight", [320, 320, 2, 2]], ["block3.10.attn.sr.bias", [320]], ["block3.10.attn.norm.weight", [320]], ["block3.10.attn.norm.bias", [320]], ["block3.10.norm2.weight", [320]], ["block3.10.norm2.bias", [320]], ["block3.10.mlp.fc1.weight", [1280, 320]], ["block3.10.mlp.fc1.bias", [1280]], ["block3.10.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.10.mlp.dwconv.dwconv.bias", [1280]], ["block3.10.mlp.fc2.weight", [320, 1280]], ["block3.10.mlp.fc2.bias", [320]], ["block3.11.norm1.weight", [320]], ["block3.11.norm1.bias", [320]], ["block3.11.attn.q.weight", [320, 320]], ["block3.11.attn.q.bias", [320]], ["block3.11.attn.kv.weight", [640, 320]], ["block3.11.attn.kv.bias", [640]], ["block3.11.attn.proj.weight", [320, 320]], ["block3.11.attn.proj.bias", [320]], ["block3.11.attn.sr.weight", [320, 320, 2, 2]], ["block3.11.attn.sr.bias", [320]], ["block3.11.attn.norm.weight", [320]], ["block3.11.attn.norm.bias", [320]], ["block3.11.norm2.weight", [320]], ["block3.11.norm2.bias", [320]], ["block3.11.mlp.fc1.weight", [1280, 320]], ["block3.11.mlp.fc1.bias", [1280]], ["block3.11.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.11.mlp.dwconv.dwconv.bias", [1280]], ["block3.11.mlp.fc2.weight", [320, 1280]], ["block3.11.mlp.fc2.bias", [320]], ["block3.12.norm1.weight", [320]], ["block3.12.norm1.bias", [320]], ["block3.12.attn.q.weight", [320, 320]], ["block3.12.attn.q.bias", [320]], ["block3.12.attn.kv.weight", [640, 320]], ["block3.12.attn.kv.bias", [640]], ["block3.12.attn.proj.weight", [320, 320]], ["block3.12.attn.proj.bias", [320]], ["block3.12.attn.sr.weight", [320, 320, 2, 2]], ["block3.12.attn.sr.bias", [320]], ["block3.12.attn.norm.weight", [320]], ["block3.12.attn.norm.bias", [320]], ["block3.12.norm2.weight", [320]], ["block3.12.norm2.bias", [320]], ["block3.12.mlp.fc1.weight", [1280, 320]], ["block3.12.mlp.fc1.bias", [1280]], ["block3.12.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.12.mlp.dwconv.dwconv.bias", [1280]], ["block3.12.mlp.fc2.weight", [320, 1280]], ["block3.12.mlp.fc2.bias", [320]], ["block3.13.norm1.weight", [320]], ["block3.13.norm1.bias", [320]], ["block3.13.attn.q.weight", [320, 320]], ["block3.13.attn.q.bias", [320]], ["block3.13.attn.kv.weight", [640, 320]], ["block3.13.attn.kv.bias", [640]], ["block3.13.attn.proj.weight", [320, 320]], ["block3.13.attn.proj.bias", [320]], ["block3.13.attn.sr.weight", [320, 320, 2, 2]], ["block3.13.attn.sr.bias", [320]], ["block3.13.attn.norm.weight", [320]], ["block3.13.attn.norm.bias", [320]], ["block3.13.norm2.weight", [320]], ["block3.13.norm2.bias", [320]], ["block3.13.mlp.fc1.weight", [1280, 320]], ["block3.13.mlp.fc1.bias", [1280]], ["block3.13.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.13.mlp.dwconv.dwconv.bias", [1280]], ["block3.13.mlp.fc2.weight", [320, 1280]], ["block3.13.mlp.fc2.bias", [320]], ["block3.14.norm1.weight", [320]], ["block3.14.norm1.bias", [320]], ["block3.14.attn.q.weight", [320, 320]], ["block3.14.attn.q.bias", [320]], ["block3.14.attn.kv.weight", [640, 320]], ["block3.14.attn.kv.bias", [640]], ["block3.14.attn.proj.weight", [320, 320]], ["block3.14.attn.proj.bias", [320]], ["block3.14.attn.sr.weight", [320, 320, 2, 2]], ["block3.14.attn.sr.bias", [320]], ["block3.14.attn.norm.weight", [320]], ["block3.14.attn.norm.bias", [320]], ["block3.14.norm2.weight", [320]], ["block3.14.norm2.bias", [320]], ["block3.14.mlp.fc1.weight", [1280, 320]], ["block3.14.mlp.fc1.bias", [1280]], ["block3.14.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.14.mlp.dwconv.dwconv.bias", [1280]], ["block3.14.mlp.fc2.weight", [320, 1280]], ["block3.14.mlp.fc2.bias", [320]], ["block3.15.norm1.weight", [320]], ["block3.15.norm1.bias", [320]], ["block3.15.attn.q.weight", [320, 320]], ["block3.15.attn.q.bias", [320]], ["block3.15.attn.kv.weight", [640, 320]], ["block3.15.attn.kv.bias", [640]], ["block3.15.attn.proj.weight", [320, 320]], ["block3.15.attn.proj.bias", [320]], ["block3.15.attn.sr.weight", [320, 320, 2, 2]], ["block3.15.attn.sr.bias", [320]], ["block3.15.attn.norm.weight", [320]], ["block3.15.attn.norm.bias", [320]], ["block3.15.norm2.weight", [320]], ["block3.15.norm2.bias", [320]], ["block3.15.mlp.fc1.weight", [1280, 320]], ["block3.15.mlp.fc1.bias", [1280]], ["block3.15.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.15.mlp.dwconv.dwconv.bias", [1280]], ["block3.15.mlp.fc2.weight", [320, 1280]], ["block3.15.mlp.fc2.bias", [320]], ["block3.16.norm1.weight", [320]], ["block3.16.norm1.bias", [320]], ["block3.16.attn.q.weight", [320, 320]], ["block3.16.attn.q.bias", [320]], ["block3.16.attn.kv.weight", [640, 320]], ["block3.16.attn.kv.bias", [640]], ["block3.16.attn.proj.weight", [320, 320]], ["block3.16.attn.proj.bias", [320]], ["block3.16.attn.sr.weight", [320, 320, 2, 2]], ["block3.16.attn.sr.bias", [320]], ["block3.16.attn.norm.weight", [320]], ["block3.16.attn.norm.bias", [320]], ["block3.16.norm2.weight", [320]], ["block3.16.norm2.bias", [320]], ["block3.16.mlp.fc1.weight", [1280, 320]], ["block3.16.mlp.fc1.bias", [1280]], ["block3.16.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.16.mlp.dwconv.dwconv.bias", [1280]], ["block3.16.mlp.fc2.weight", [320, 1280]], ["block3.16.mlp.fc2.bias", [320]], ["block3.17.norm1.weight", [320]], ["block3.17.norm1.bias", [320]], ["block3.17.attn.q.weight", [320, 320]], ["block3.17.attn.q.bias", [320]], ["block3.17.attn.kv.weight", [640, 320]], ["block3.17.attn.kv.bias", [640]], ["block3.17.attn.proj.weight", [320, 320]], ["block3.17.attn.proj.bias", [320]], ["block3.17.attn.sr.weight", [320, 320, 2, 2]], ["block3.17.attn.sr.bias", [320]], ["block3.17.attn.norm.weight", [320]], ["block3.17.attn.norm.bias", [320]], ["block3.17.norm2.weight", [320]], ["block3.17.norm2.bias", [320]], ["block3.17.mlp.fc1.weight", [1280, 320]], ["block3.17.mlp.fc1.bias", [1280]], ["block3.17.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.17.mlp.dwconv.dwconv.bias", [1280]], ["block3.17.mlp.fc2.weight", [320, 1280]], ["block3.17.mlp.fc2.bias", [320]], ["block3.18.norm1.weight", [320]], ["block3.18.norm1.bias", [320]], ["block3.18.attn.q.weight", [320, 320]], ["block3.18.attn.q.bias", [320]], ["block3.18.attn.kv.weight", [640, 320]], ["block3.18.attn.kv.bias", [640]], ["block3.18.attn.proj.weight", [320, 320]], ["block3.18.attn.proj.bias", [320]], ["block3.18.attn.sr.weight", [320, 320, 2, 2]], ["block3.18.attn.sr.bias", [320]], ["block3.18.attn.norm.weight", [320]], ["block3.18.attn.norm.bias", [320]], ["block3.18.norm2.weight", [320]], ["block3.18.norm2.bias", [320]], ["block3.18.mlp.fc1.weight", [1280, 320]], ["block3.18.mlp.fc1.bias", [1280]], ["block3.18.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.18.mlp.dwconv.dwconv.bias", [1280]], ["block3.18.mlp.fc2.weight", [320, 1280]], ["block3.18.mlp.fc2.bias", [320]], ["block3.19.norm1.weight", [320]], ["block3.19.norm1.bias", [320]], ["block3.19.attn.q.weight", [320, 320]], ["block3.19.attn.q.bias", [320]], ["block3.19.attn.kv.weight", [640, 320]], ["block3.19.attn.kv.bias", [640]], ["block3.19.attn.proj.weight", [320, 320]], ["block3.19.attn.proj.bias", [320]], ["block3.19.attn.sr.weight", [320, 320, 2, 2]], ["block3.19.attn.sr.bias", [320]], ["block3.19.attn.norm.weight", [320]], ["block3.19.attn.norm.bias", [320]], ["block3.19.norm2.weight", [320]], ["block3.19.norm2.bias", [320]], ["block3.19.mlp.fc1.weight", [1280, 320]], ["block3.19.mlp.fc1.bias", [1280]], ["block3.19.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.19.mlp.dwconv.dwconv.bias", [1280]], ["block3.19.mlp.fc2.weight", [320, 1280]], ["block3.19.mlp.fc2.bias", [320]], ["block3.20.norm1.weight", [320]], ["block3.20.norm1.bias", [320]], ["block3.20.attn.q.weight", [320, 320]], ["block3.20.attn.q.bias", [320]], ["block3.20.attn.kv.weight", [640, 320]], ["block3.20.attn.kv.bias", [640]], ["block3.20.attn.proj.weight", [320, 320]], ["block3.20.attn.proj.bias", [320]], ["block3.20.attn.sr.weight", [320, 320, 2, 2]], ["block3.20.attn.sr.bias", [320]], ["block3.20.attn.norm.weight", [320]], ["block3.20.attn.norm.bias", [320]], ["block3.20.norm2.weight", [320]], ["block3.20.norm2.bias", [320]], ["block3.20.mlp.fc1.weight", [1280, 320]], ["block3.20.mlp.fc1.bias", [1280]], ["block3.20.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.20.mlp.dwconv.dwconv.bias", [1280]], ["block3.20.mlp.fc2.weight", [320, 1280]], ["block3.20.mlp.fc2.bias", [320]], ["block3.21.norm1.weight", [320]], ["block3.21.norm1.bias", [320]], ["block3.21.attn.q.weight", [320, 320]], ["block3.21.attn.q.bias", [320]], ["block3.21.attn.kv.weight", [640, 320]], ["block3.21.attn.kv.bias", [640]], ["block3.21.attn.proj.weight", [320, 320]], ["block3.21.attn.proj.bias", [320]], ["block3.21.attn.sr.weight", [320, 320, 2, 2]], ["block3.21.attn.sr.bias", [320]], ["block3.21.attn.norm.weight", [320]], ["block3.21.attn.norm.bias", [320]], ["block3.21.norm2.weight", [320]], ["block3.21.norm2.bias", [320]], ["block3.21.mlp.fc1.weight", [1280, 320]], ["block3.21.mlp.fc1.bias", [1280]], ["block3.21.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.21.mlp.dwconv.dwconv.bias", [1280]], ["block3.21.mlp.fc2.weight", [320, 1280]], ["block3.21.mlp.fc2.bias", [320]], ["block3.22.norm1.weight", [320]], ["block3.22.norm1.bias", [320]], ["block3.22.attn.q.weight", [320, 320]], ["block3.22.attn.q.bias", [320]], ["block3.22.attn.kv.weight", [640, 320]], ["block3.22.attn.kv.bias", [640]], ["block3.22.attn.proj.weight", [320, 320]], ["block3.22.attn.proj.bias", [320]], ["block3.22.attn.sr.weight", [320, 320, 2, 2]], ["block3.22.attn.sr.bias", [320]], ["block3.22.attn.norm.weight", [320]], ["block3.22.attn.norm.bias", [320]], ["block3.22.norm2.weight", [320]], ["block3.22.norm2.bias", [320]], ["block3.22.mlp.fc1.weight", [1280, 320]], ["block3.22.mlp.fc1.bias", [1280]], ["block3.22.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.22.mlp.dwconv.dwconv.bias", [1280]], ["block3.22.mlp.fc2.weight", [320, 1280]], ["block3.22.mlp.fc2.bias", [320]], ["block3.23.norm1.weight", [320]], ["block3.23.norm1.bias", [320]], ["block3.23.attn.q.weight", [320, 320]], ["block3.23.attn.q.bias", [320]], ["block3.23.attn.kv.weight", [640, 320]], ["block3.23.attn.kv.bias", [640]], ["block3.23.attn.proj.weight", [320, 320]], ["block3.23.attn.proj.bias", [320]], ["block3.23.attn.sr.weight", [320, 320, 2, 2]], ["block3.23.attn.sr.bias", [320]], ["block3.23.attn.norm.weight", [320]], ["block3.23.attn.norm.bias", [320]], ["block3.23.norm2.weight", [320]], ["block3.23.norm2.bias", [320]], ["block3.23.mlp.fc1.weight", [1280, 320]], ["block3.23.mlp.fc1.bias", [1280]], ["block3.23.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.23.mlp.dwconv.dwconv.bias", [1280]], ["block3.23.mlp.fc2.weight", [320, 1280]], ["block3.23.mlp.fc2.bias", [320]], ["block3.24.norm1.weight", [320]], ["block3.24.norm1.bias", [320]], ["block3.24.attn.q.weight", [320, 320]], ["block3.24.attn.q.bias", [320]], ["block3.24.attn.kv.weight", [640, 320]], ["block3.24.attn.kv.bias", [640]], ["block3.24.attn.proj.weight", [320, 320]], ["block3.24.attn.proj.bias", [320]], ["block3.24.attn.sr.weight", [320, 320, 2, 2]], ["block3.24.attn.sr.bias", [320]], ["block3.24.attn.norm.weight", [320]], ["block3.24.attn.norm.bias", [320]], ["block3.24.norm2.weight", [320]], ["block3.24.norm2.bias", [320]], ["block3.24.mlp.fc1.weight", [1280, 320]], ["block3.24.mlp.fc1.bias", [1280]], ["block3.24.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.24.mlp.dwconv.dwconv.bias", [1280]], ["block3.24.mlp.fc2.weight", [320, 1280]], ["block3.24.mlp.fc2.bias", [320]], ["block3.25.norm1.weight", [320]], ["block3.25.norm1.bias", [320]], ["block3.25.attn.q.weight", [320, 320]], ["block3.25.attn.q.bias", [320]], ["block3.25.attn.kv.weight", [640, 320]], ["block3.25.attn.kv.bias", [640]], ["block3.25.attn.proj.weight", [320, 320]], ["block3.25.attn.proj.bias", [320]], ["block3.25.attn.sr.weight", [320, 320, 2, 2]], ["block3.25.attn.sr.bias", [320]], ["block3.25.attn.norm.weight", [320]], ["block3.25.attn.norm.bias", [320]], ["block3.25.norm2.weight", [320]], ["block3.25.norm2.bias", [320]], ["block3.25.mlp.fc1.weight", [1280, 320]], ["block3.25.mlp.fc1.bias", [1280]], ["block3.25.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.25.mlp.dwconv.dwconv.bias", [1280]], ["block3.25.mlp.fc2.weight", [320, 1280]], ["block3.25.mlp.fc2.bias", [320]], ["block3.26.norm1.weight", [320]], ["block3.26.norm1.bias", [320]], ["block3.26.attn.q.weight", [320, 320]], ["block3.26.attn.q.bias", [320]], ["block3.26.attn.kv.weight", [640, 320]], ["block3.26.attn.kv.bias", [640]], ["block3.26.attn.proj.weight", [320, 320]], ["block3.26.attn.proj.bias", [320]], ["block3.26.attn.sr.weight", [320, 320, 2, 2]], ["block3.26.attn.sr.bias", [320]], ["block3.26.attn.norm.weight", [320]], ["block3.26.attn.norm.bias", [320]], ["block3.26.norm2.weight", [320]], ["block3.26.norm2.bias", [320]], ["block3.26.mlp.fc1.weight", [1280, 320]], ["block3.26.mlp.fc1.bias", [1280]], ["block3.26.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.26.mlp.dwconv.dwconv.bias", [1280]], ["block3.26.mlp.fc2.weight", [320, 1280]], ["block3.26.mlp.fc2.bias", [320]], ["block3.27.norm1.weight", [320]], ["block3.27.norm1.bias", [320]], ["block3.27.attn.q.weight", [320, 320]], ["block3.27.attn.q.bias", [320]], ["block3.27.attn.kv.weight", [640, 320]], ["block3.27.attn.kv.bias", [640]], ["block3.27.attn.proj.weight", [320, 320]], ["block3.27.attn.proj.bias", [320]], ["block3.27.attn.sr.weight", [320, 320, 2, 2]], ["block3.27.attn.sr.bias", [320]], ["block3.27.attn.norm.weight", [320]], ["block3.27.attn.norm.bias", [320]], ["block3.27.norm2.weight", [320]], ["block3.27.norm2.bias", [320]], ["block3.27.mlp.fc1.weight", [1280, 320]], ["block3.27.mlp.fc1.bias", [1280]], ["block3.27.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.27.mlp.dwconv.dwconv.bias", [1280]], ["block3.27.mlp.fc2.weight", [320, 1280]], ["block3.27.mlp.fc2.bias", [320]], ["block3.28.norm1.weight", [320]], ["block3.28.norm1.bias", [320]], ["block3.28.attn.q.weight", [320, 320]], ["block3.28.attn.q.bias", [320]], ["block3.28.attn.kv.weight", [640, 320]], ["block3.28.attn.kv.bias", [640]], ["block3.28.attn.proj.weight", [320, 320]], ["block3.28.attn.proj.bias", [320]], ["block3.28.attn.sr.weight", [320, 320, 2, 2]], ["block3.28.attn.sr.bias", [320]], ["block3.28.attn.norm.weight", [320]], ["block3.28.attn.norm.bias", [320]], ["block3.28.norm2.weight", [320]], ["block3.28.norm2.bias", [320]], ["block3.28.mlp.fc1.weight", [1280, 320]], ["block3.28.mlp.fc1.bias", [1280]], ["block3.28.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.28.mlp.dwconv.dwconv.bias", [1280]], ["block3.28.mlp.fc2.weight", [320, 1280]], ["block3.28.mlp.fc2.bias", [320]], ["block3.29.norm1.weight", [320]], ["block3.29.norm1.bias", [320]], ["block3.29.attn.q.weight", [320, 320]], ["block3.29.attn.q.bias", [320]], ["block3.29.attn.kv.weight", [640, 320]], ["block3.29.attn.kv.bias", [640]], ["block3.29.attn.proj.weight", [320, 320]], ["block3.29.attn.proj.bias", [320]], ["block3.29.attn.sr.weight", [320, 320, 2, 2]], ["block3.29.attn.sr.bias", [320]], ["block3.29.attn.norm.weight", [320]], ["block3.29.attn.norm.bias", [320]], ["block3.29.norm2.weight", [320]], ["block3.29.norm2.bias", [320]], ["block3.29.mlp.fc1.weight", [1280, 320]], ["block3.29.mlp.fc1.bias", [1280]], ["block3.29.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.29.mlp.dwconv.dwconv.bias", [1280]], ["block3.29.mlp.fc2.weight", [320, 1280]], ["block3.29.mlp.fc2.bias", [320]], ["block3.30.norm1.weight", [320]], ["block3.30.norm1.bias", [320]], ["block3.30.attn.q.weight", [320, 320]], ["block3.30.attn.q.bias", [320]], ["block3.30.attn.kv.weight", [640, 320]], ["block3.30.attn.kv.bias", [640]], ["block3.30.attn.proj.weight", [320, 320]], ["block3.30.attn.proj.bias", [320]], ["block3.30.attn.sr.weight", [320, 320, 2, 2]], ["block3.30.attn.sr.bias", [320]], ["block3.30.attn.norm.weight", [320]], ["block3.30.attn.norm.bias", [320]], ["block3.30.norm2.weight", [320]], ["block3.30.norm2.bias", [320]], ["block3.30.mlp.fc1.weight", [1280, 320]], ["block3.30.mlp.fc1.bias", [1280]], ["block3.30.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.30.mlp.dwconv.dwconv.bias", [1280]], ["block3.30.mlp.fc2.weight", [320, 1280]], ["block3.30.mlp.fc2.bias", [320]], ["block3.31.norm1.weight", [320]], ["block3.31.norm1.bias", [320]], ["block3.31.attn.q.weight", [320, 320]], ["block3.31.attn.q.bias", [320]], ["block3.31.attn.kv.weight", [640, 320]], ["block3.31.attn.kv.bias", [640]], ["block3.31.attn.proj.weight", [320, 320]], ["block3.31.attn.proj.bias", [320]], ["block3.31.attn.sr.weight", [320, 320, 2, 2]], ["block3.31.attn.sr.bias", [320]], ["block3.31.attn.norm.weight", [320]], ["block3.31.attn.norm.bias", [320]], ["block3.31.norm2.weight", [320]], ["block3.31.norm2.bias", [320]], ["block3.31.mlp.fc1.weight", [1280, 320]], ["block3.31.mlp.fc1.bias", [1280]], ["block3.31.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.31.mlp.dwconv.dwconv.bias", [1280]], ["block3.31.mlp.fc2.weight", [320, 1280]], ["block3.31.mlp.fc2.bias", [320]], ["block3.32.norm1.weight", [320]], ["block3.32.norm1.bias", [320]], ["block3.32.attn.q.weight", [320, 320]], ["block3.32.attn.q.bias", [320]], ["block3.32.attn.kv.weight", [640, 320]], ["block3.32.attn.kv.bias", [640]], ["block3.32.attn.proj.weight", [320, 320]], ["block3.32.attn.proj.bias", [320]], ["block3.32.attn.sr.weight", [320, 320, 2, 2]], ["block3.32.attn.sr.bias", [320]], ["block3.32.attn.norm.weight", [320]], ["block3.32.attn.norm.bias", [320]], ["block3.32.norm2.weight", [320]], ["block3.32.norm2.bias", [320]], ["block3.32.mlp.fc1.weight", [1280, 320]], ["block3.32.mlp.fc1.bias", [1280]], ["block3.32.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.32.mlp.dwconv.dwconv.bias", [1280]], ["block3.32.mlp.fc2.weight", [320, 1280]], ["block3.32.mlp.fc2.bias", [320]], ["block3.33.norm1.weight", [320]], ["block3.33.norm1.bias", [320]], ["block3.33.attn.q.weight", [320, 320]], ["block3.33.attn.q.bias", [320]], ["block3.33.attn.kv.weight", [640, 320]], ["block3.33.attn.kv.bias", [640]], ["block3.33.attn.proj.weight", [320, 320]], ["block3.33.attn.proj.bias", [320]], ["block3.33.attn.sr.weight", [320, 320, 2, 2]], ["block3.33.attn.sr.bias", [320]], ["block3.33.attn.norm.weight", [320]], ["block3.33.attn.norm.bias", [320]], ["block3.33.norm2.weight", [320]], ["block3.33.norm2.bias", [320]], ["block3.33.mlp.fc1.weight", [1280, 320]], ["block3.33.mlp.fc1.bias", [1280]], ["block3.33.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.33.mlp.dwconv.dwconv.bias", [1280]], ["block3.33.mlp.fc2.weight", [320, 1280]], ["block3.33.mlp.fc2.bias", [320]], ["block3.34.norm1.weight", [320]], ["block3.34.norm1.bias", [320]], ["block3.34.attn.q.weight", [320, 320]], ["block3.34.attn.q.bias", [320]], ["block3.34.attn.kv.weight", [640, 320]], ["block3.34.attn.kv.bias", [640]], ["block3.34.attn.proj.weight", [320, 320]], ["block3.34.attn.proj.bias", [320]], ["block3.34.attn.sr.weight", [320, 320, 2, 2]], ["block3.34.attn.sr.bias", [320]], ["block3.34.attn.norm.weight", [320]], ["block3.34.attn.norm.bias", [320]], ["block3.34.norm2.weight", [320]], ["block3.34.norm2.bias", [320]], ["block3.34.mlp.fc1.weight", [1280, 320]], ["block3.34.mlp.fc1.bias", [1280]], ["block3.34.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.34.mlp.dwconv.dwconv.bias", [1280]], ["block3.34.mlp.fc2.weight", [320, 1280]], ["block3.34.mlp.fc2.bias", [320]], ["block3.35.norm1.weight", [320]], ["block3.35.norm1.bias", [320]], ["block3.35.attn.q.weight", [320, 320]], ["block3.35.attn.q.bias", [320]], ["block3.35.attn.kv.weight", [640, 320]], ["block3.35.attn.kv.bias", [640]], ["block3.35.attn.proj.weight", [320, 320]], ["block3.35.attn.proj.bias", [320]], ["block3.35.attn.sr.weight", [320, 320, 2, 2]], ["block3.35.attn.sr.bias", [320]], ["block3.35.attn.norm.weight", [320]], ["block3.35.attn.norm.bias", [320]], ["block3.35.norm2.weight", [320]], ["block3.35.norm2.bias", [320]], ["block3.35.mlp.fc1.weight", [1280, 320]], ["block3.35.mlp.fc1.bias", [1280]], ["block3.35.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.35.mlp.dwconv.dwconv.bias", [1280]], ["block3.35.mlp.fc2.weight", [320, 1280]], ["block3.35.mlp.fc2.bias", [320]], ["block3.36.norm1.weight", [320]], ["block3.36.norm1.bias", [320]], ["block3.36.attn.q.weight", [320, 320]], ["block3.36.attn.q.bias", [320]], ["block3.36.attn.kv.weight", [640, 320]], ["block3.36.attn.kv.bias", [640]], ["block3.36.attn.proj.weight", [320, 320]], ["block3.36.attn.proj.bias", [320]], ["block3.36.attn.sr.weight", [320, 320, 2, 2]], ["block3.36.attn.sr.bias", [320]], ["block3.36.attn.norm.weight", [320]], ["block3.36.attn.norm.bias", [320]], ["block3.36.norm2.weight", [320]], ["block3.36.norm2.bias", [320]], ["block3.36.mlp.fc1.weight", [1280, 320]], ["block3.36.mlp.fc1.bias", [1280]], ["block3.36.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.36.mlp.dwconv.dwconv.bias", [1280]], ["block3.36.mlp.fc2.weight", [320, 1280]], ["block3.36.mlp.fc2.bias", [320]], ["block3.37.norm1.weight", [320]], ["block3.37.norm1.bias", [320]], ["block3.37.attn.q.weight", [320, 320]], ["block3.37.attn.q.bias", [320]], ["block3.37.attn.kv.weight", [640, 320]], ["block3.37.attn.kv.bias", [640]], ["block3.37.attn.proj.weight", [320, 320]], ["block3.37.attn.proj.bias", [320]], ["block3.37.attn.sr.weight", [320, 320, 2, 2]], ["block3.37.attn.sr.bias", [320]], ["block3.37.attn.norm.weight", [320]], ["block3.37.attn.norm.bias", [320]], ["block3.37.norm2.weight", [320]], ["block3.37.norm2.bias", [320]], ["block3.37.mlp.fc1.weight", [1280, 320]], ["block3.37.mlp.fc1.bias", [1280]], ["block3.37.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.37.mlp.dwconv.dwconv.bias", [1280]], ["block3.37.mlp.fc2.weight", [320, 1280]], ["block3.37.mlp.fc2.bias", [320]], ["block3.38.norm1.weight", [320]], ["block3.38.norm1.bias", [320]], ["block3.38.attn.q.weight", [320, 320]], ["block3.38.attn.q.bias", [320]], ["block3.38.attn.kv.weight", [640, 320]], ["block3.38.attn.kv.bias", [640]], ["block3.38.attn.proj.weight", [320, 320]], ["block3.38.attn.proj.bias", [320]], ["block3.38.attn.sr.weight", [320, 320, 2, 2]], ["block3.38.attn.sr.bias", [320]], ["block3.38.attn.norm.weight", [320]], ["block3.38.attn.norm.bias", [320]], ["block3.38.norm2.weight", [320]], ["block3.38.norm2.bias", [320]], ["block3.38.mlp.fc1.weight", [1280, 320]], ["block3.38.mlp.fc1.bias", [1280]], ["block3.38.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.38.mlp.dwconv.dwconv.bias", [1280]], ["block3.38.mlp.fc2.weight", [320, 1280]], ["block3.38.mlp.fc2.bias", [320]], ["block3.39.norm1.weight", [320]], ["block3.39.norm1.bias", [320]], ["block3.39.attn.q.weight", [320, 320]], ["block3.39.attn.q.bias", [320]], ["block3.39.attn.kv.weight", [640, 320]], ["block3.39.attn.kv.bias", [640]], ["block3.39.attn.proj.weight", [320, 320]], ["block3.39.attn.proj.bias", [320]], ["block3.39.attn.sr.weight", [320, 320, 2, 2]], ["block3.39.attn.sr.bias", [320]], ["block3.39.attn.norm.weight", [320]], ["block3.39.attn.norm.bias", [320]], ["block3.39.norm2.weight", [320]], ["block3.39.norm2.bias", [320]], ["block3.39.mlp.fc1.weight", [1280, 320]], ["block3.39.mlp.fc1.bias", [1280]], ["block3.39.mlp.dwconv.dwconv.weight", [1280, 1, 3, 3]], ["block3.39.mlp.dwconv.dwconv.bias", [1280]], ["block3.39.mlp.fc2.weight", [320, 1280]], ["block3.39.mlp.fc2.bias", [320]], ["norm3.weight", [320]], ["norm3.bias", [320]], ["block4.0.norm1.weight", [512]], ["block4.0.norm1.bias", [512]], ["block4.0.attn.q.weight", [512, 512]], ["block4.0.attn.q.bias", [512]], ["block4.0.attn.kv.weight", [1024, 512]], ["block4.0.attn.kv.bias", [1024]], ["block4.0.attn.proj.weight", [512, 512]], ["block4.0.attn.proj.bias", [512]], ["block4.0.norm2.weight", [512]], ["block4.0.norm2.bias", [512]], ["block4.0.mlp.fc1.weight", [2048, 512]], ["block4.0.mlp.fc1.bias", [2048]], ["block4.0.mlp.dwconv.dwconv.weight", [2048, 1, 3, 3]], ["block4.0.mlp.dwconv.dwconv.bias", [2048]], ["block4.0.mlp.fc2.weight", [512, 2048]], ["block4.0.mlp.fc2.bias", [512]], ["block4.1.norm1.weight", [512]], ["block4.1.norm1.bias", [512]], ["block4.1.attn.q.weight", [512, 512]], ["block4.1.attn.q.bias", [512]], ["block4.1.attn.kv.weight", [1024, 512]], ["block4.1.attn.kv.bias", [1024]], ["block4.1.attn.proj.weight", [512, 512]], ["block4.1.attn.proj.bias", [512]], ["block4.1.norm2.weight", [512]], ["block4.1.norm2.bias", [512]], ["block4.1.mlp.fc1.weight", [2048, 512]], ["block4.1.mlp.fc1.bias", [2048]], ["block4.1.mlp.dwconv.dwconv.weight", [2048, 1, 3, 3]], ["block4.1.mlp.dwconv.dwconv.bias", [2048]], ["block4.1.mlp.fc2.weight", [512, 2048]], ["block4.1.mlp.fc2.bias", [512]], ["block4.2.norm1.weight", [512]], ["block4.2.norm1.bias", [512]], ["block4.2.attn.q.weight", [512, 512]], ["block4.2.attn.q.bias", [512]], ["block4.2.attn.kv.weight", [1024, 512]], ["block4.2.attn.kv.bias", [1024]], ["block4.2.attn.proj.weight", [512, 512]], ["block4.2.attn.proj.bias", [512]], ["block4.2.norm2.weight", [512]], ["block4.2.norm2.bias", [512]], ["block4.2.mlp.fc1.weight", [2048, 512]], ["block4.2.mlp.fc1.bias", [2048]], ["block4.2.mlp.dwconv.dwconv.weight", [2048, 1, 3, 3]], ["block4.2.mlp.dwconv.dwconv.bias", [2048]], ["block4.2.mlp.fc2.weight", [512, 2048]], ["block4.2.mlp.fc2.bias", [512]], ["norm4.weight", [512]], ["norm4.bias", [512]]], "output_shape": [[[1, 3, 512, 512], [1, 0, 256, 256], [1, 64, 128, 128], [1, 128, 64, 64], [1, 320, 32, 32], [1, 512, 16, 16]]], "num_parameters": [9408, 64, 64, 64, 73728, 128, 128, 128, 368640, 320, 320, 320, 1474560, 512, 512, 512, 64, 64, 4096, 64, 8192, 128, 4096, 64, 262144, 64, 64, 64, 64, 64, 16384, 256, 2304, 256, 16384, 64, 64, 64, 4096, 64, 8192, 128, 4096, 64, 262144, 64, 64, 64, 64, 64, 16384, 256, 2304, 256, 16384, 64, 64, 64, 4096, 64, 8192, 128, 4096, 64, 262144, 64, 64, 64, 64, 64, 16384, 256, 2304, 256, 16384, 64, 64, 64, 128, 128, 16384, 128, 32768, 256, 16384, 128, 262144, 128, 128, 128, 128, 128, 65536, 512, 4608, 512, 65536, 128, 128, 128, 16384, 128, 32768, 256, 16384, 128, 262144, 128, 128, 128, 128, 128, 65536, 512, 4608, 512, 65536, 128, 128, 128, 16384, 128, 32768, 256, 16384, 128, 262144, 128, 128, 128, 128, 128, 65536, 512, 4608, 512, 65536, 128, 128, 128, 16384, 128, 32768, 256, 16384, 128, 262144, 128, 128, 128, 128, 128, 65536, 512, 4608, 512, 65536, 128, 128, 128, 16384, 128, 32768, 256, 16384, 128, 262144, 128, 128, 128, 128, 128, 65536, 512, 4608, 512, 65536, 128, 128, 128, 16384, 128, 32768, 256, 16384, 128, 262144, 128, 128, 128, 128, 128, 65536, 512, 4608, 512, 65536, 128, 128, 128, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 102400, 320, 204800, 640, 102400, 320, 409600, 320, 320, 320, 320, 320, 409600, 1280, 11520, 1280, 409600, 320, 320, 320, 512, 512, 262144, 512, 524288, 1024, 262144, 512, 512, 512, 1048576, 2048, 18432, 2048, 1048576, 512, 512, 512, 262144, 512, 524288, 1024, 262144, 512, 512, 512, 1048576, 2048, 18432, 2048, 1048576, 512, 512, 512, 262144, 512, 524288, 1024, 262144, 512, 512, 512, 1048576, 2048, 18432, 2048, 1048576, 512, 512, 512]}, {"name": "decoder", "id": 137277474536720, "class_name": "MAnetDecoder(\n  (center): PAB(\n    (top_conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n    (center_conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n    (bottom_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (map_softmax): Softmax(dim=1)\n    (out_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n  )\n  (blocks): ModuleList(\n    (0): MFAB(\n      (hl_conv): Sequential(\n        (0): Conv2dReLU(\n          (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): Mish(inplace=True)\n        )\n        (1): Conv2dReLU(\n          (0): Conv2d(512, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): Mish(inplace=True)\n        )\n      )\n      (SE_ll): Sequential(\n        (0): AdaptiveAvgPool2d(output_size=1)\n        (1): Conv2d(320, 20, kernel_size=(1, 1), stride=(1, 1))\n        (2): Mish(inplace=True)\n        (3): Conv2d(20, 320, kernel_size=(1, 1), stride=(1, 1))\n        (4): Sigmoid()\n      )\n      (SE_hl): Sequential(\n        (0): AdaptiveAvgPool2d(output_size=1)\n        (1): Conv2d(320, 20, kernel_size=(1, 1), stride=(1, 1))\n        (2): Mish(inplace=True)\n        (3): Conv2d(20, 320, kernel_size=(1, 1), stride=(1, 1))\n        (4): Sigmoid()\n      )\n      (conv1): Conv2dReLU(\n        (0): Conv2d(640, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n      (conv2): Conv2dReLU(\n        (0): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n    )\n    (1): MFAB(\n      (hl_conv): Sequential(\n        (0): Conv2dReLU(\n          (0): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): Mish(inplace=True)\n        )\n        (1): Conv2dReLU(\n          (0): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): Mish(inplace=True)\n        )\n      )\n      (SE_ll): Sequential(\n        (0): AdaptiveAvgPool2d(output_size=1)\n        (1): Conv2d(128, 8, kernel_size=(1, 1), stride=(1, 1))\n        (2): Mish(inplace=True)\n        (3): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))\n        (4): Sigmoid()\n      )\n      (SE_hl): Sequential(\n        (0): AdaptiveAvgPool2d(output_size=1)\n        (1): Conv2d(128, 8, kernel_size=(1, 1), stride=(1, 1))\n        (2): Mish(inplace=True)\n        (3): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))\n        (4): Sigmoid()\n      )\n      (conv1): Conv2dReLU(\n        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n      (conv2): Conv2dReLU(\n        (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n    )\n    (2): MFAB(\n      (hl_conv): Sequential(\n        (0): Conv2dReLU(\n          (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): Mish(inplace=True)\n        )\n        (1): Conv2dReLU(\n          (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): Mish(inplace=True)\n        )\n      )\n      (SE_ll): Sequential(\n        (0): AdaptiveAvgPool2d(output_size=1)\n        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))\n        (2): Mish(inplace=True)\n        (3): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))\n        (4): Sigmoid()\n      )\n      (SE_hl): Sequential(\n        (0): AdaptiveAvgPool2d(output_size=1)\n        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))\n        (2): Mish(inplace=True)\n        (3): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))\n        (4): Sigmoid()\n      )\n      (conv1): Conv2dReLU(\n        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n      (conv2): Conv2dReLU(\n        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n    )\n    (3): DecoderBlock(\n      (conv1): Conv2dReLU(\n        (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n      (conv2): Conv2dReLU(\n        (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n    )\n    (4): DecoderBlock(\n      (conv1): Conv2dReLU(\n        (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n      (conv2): Conv2dReLU(\n        (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): Mish(inplace=True)\n      )\n    )\n  )\n)", "parameters": [["center.top_conv.weight", [256, 512, 1, 1]], ["center.top_conv.bias", [256]], ["center.center_conv.weight", [256, 512, 1, 1]], ["center.center_conv.bias", [256]], ["center.bottom_conv.weight", [512, 512, 3, 3]], ["center.bottom_conv.bias", [512]], ["center.out_conv.weight", [512, 512, 3, 3]], ["center.out_conv.bias", [512]], ["blocks.0.hl_conv.0.0.weight", [512, 512, 3, 3]], ["blocks.0.hl_conv.0.1.weight", [512]], ["blocks.0.hl_conv.0.1.bias", [512]], ["blocks.0.hl_conv.1.0.weight", [320, 512, 1, 1]], ["blocks.0.hl_conv.1.1.weight", [320]], ["blocks.0.hl_conv.1.1.bias", [320]], ["blocks.0.SE_ll.1.weight", [20, 320, 1, 1]], ["blocks.0.SE_ll.1.bias", [20]], ["blocks.0.SE_ll.3.weight", [320, 20, 1, 1]], ["blocks.0.SE_ll.3.bias", [320]], ["blocks.0.SE_hl.1.weight", [20, 320, 1, 1]], ["blocks.0.SE_hl.1.bias", [20]], ["blocks.0.SE_hl.3.weight", [320, 20, 1, 1]], ["blocks.0.SE_hl.3.bias", [320]], ["blocks.0.conv1.0.weight", [1024, 640, 3, 3]], ["blocks.0.conv1.1.weight", [1024]], ["blocks.0.conv1.1.bias", [1024]], ["blocks.0.conv2.0.weight", [1024, 1024, 3, 3]], ["blocks.0.conv2.1.weight", [1024]], ["blocks.0.conv2.1.bias", [1024]], ["blocks.1.hl_conv.0.0.weight", [1024, 1024, 3, 3]], ["blocks.1.hl_conv.0.1.weight", [1024]], ["blocks.1.hl_conv.0.1.bias", [1024]], ["blocks.1.hl_conv.1.0.weight", [128, 1024, 1, 1]], ["blocks.1.hl_conv.1.1.weight", [128]], ["blocks.1.hl_conv.1.1.bias", [128]], ["blocks.1.SE_ll.1.weight", [8, 128, 1, 1]], ["blocks.1.SE_ll.1.bias", [8]], ["blocks.1.SE_ll.3.weight", [128, 8, 1, 1]], ["blocks.1.SE_ll.3.bias", [128]], ["blocks.1.SE_hl.1.weight", [8, 128, 1, 1]], ["blocks.1.SE_hl.1.bias", [8]], ["blocks.1.SE_hl.3.weight", [128, 8, 1, 1]], ["blocks.1.SE_hl.3.bias", [128]], ["blocks.1.conv1.0.weight", [512, 256, 3, 3]], ["blocks.1.conv1.1.weight", [512]], ["blocks.1.conv1.1.bias", [512]], ["blocks.1.conv2.0.weight", [512, 512, 3, 3]], ["blocks.1.conv2.1.weight", [512]], ["blocks.1.conv2.1.bias", [512]], ["blocks.2.hl_conv.0.0.weight", [512, 512, 3, 3]], ["blocks.2.hl_conv.0.1.weight", [512]], ["blocks.2.hl_conv.0.1.bias", [512]], ["blocks.2.hl_conv.1.0.weight", [64, 512, 1, 1]], ["blocks.2.hl_conv.1.1.weight", [64]], ["blocks.2.hl_conv.1.1.bias", [64]], ["blocks.2.SE_ll.1.weight", [4, 64, 1, 1]], ["blocks.2.SE_ll.1.bias", [4]], ["blocks.2.SE_ll.3.weight", [64, 4, 1, 1]], ["blocks.2.SE_ll.3.bias", [64]], ["blocks.2.SE_hl.1.weight", [4, 64, 1, 1]], ["blocks.2.SE_hl.1.bias", [4]], ["blocks.2.SE_hl.3.weight", [64, 4, 1, 1]], ["blocks.2.SE_hl.3.bias", [64]], ["blocks.2.conv1.0.weight", [256, 128, 3, 3]], ["blocks.2.conv1.1.weight", [256]], ["blocks.2.conv1.1.bias", [256]], ["blocks.2.conv2.0.weight", [256, 256, 3, 3]], ["blocks.2.conv2.1.weight", [256]], ["blocks.2.conv2.1.bias", [256]], ["blocks.3.conv1.0.weight", [128, 256, 3, 3]], ["blocks.3.conv1.1.weight", [128]], ["blocks.3.conv1.1.bias", [128]], ["blocks.3.conv2.0.weight", [128, 128, 3, 3]], ["blocks.3.conv2.1.weight", [128]], ["blocks.3.conv2.1.bias", [128]], ["blocks.4.conv1.0.weight", [64, 128, 3, 3]], ["blocks.4.conv1.1.weight", [64]], ["blocks.4.conv1.1.bias", [64]], ["blocks.4.conv2.0.weight", [64, 64, 3, 3]], ["blocks.4.conv2.1.weight", [64]], ["blocks.4.conv2.1.bias", [64]]], "output_shape": [[1, 64, 512, 512]], "num_parameters": [131072, 256, 131072, 256, 2359296, 512, 2359296, 512, 2359296, 512, 512, 163840, 320, 320, 6400, 20, 6400, 320, 6400, 20, 6400, 320, 5898240, 1024, 1024, 9437184, 1024, 1024, 9437184, 1024, 1024, 131072, 128, 128, 1024, 8, 1024, 128, 1024, 8, 1024, 128, 1179648, 512, 512, 2359296, 512, 512, 2359296, 512, 512, 32768, 64, 64, 256, 4, 256, 64, 256, 4, 256, 64, 294912, 256, 256, 589824, 256, 256, 294912, 128, 128, 147456, 128, 128, 73728, 64, 64, 36864, 64, 64]}, {"name": "cellprob_head.0", "id": 137277423489488, "class_name": "Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))", "parameters": [["weight", [32, 64, 3, 3]], ["bias", [32]]], "output_shape": [[1, 32, 512, 512]], "num_parameters": [18432, 32]}, {"name": "cellprob_head.1", "id": 137277423492688, "class_name": "Mish(inplace=True)", "parameters": [], "output_shape": [[1, 32, 512, 512]], "num_parameters": []}, {"name": "cellprob_head.2", "id": 137277423498704, "class_name": "BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [32]], ["bias", [32]]], "output_shape": [[1, 32, 512, 512]], "num_parameters": [32, 32]}, {"name": "cellprob_head.3", "id": 137277423496656, "class_name": "Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))", "parameters": [["weight", [1, 32, 3, 3]], ["bias", [1]]], "output_shape": [[1, 1, 512, 512]], "num_parameters": [288, 1]}, {"name": "cellprob_head.4", "id": 137277423588496, "class_name": "Identity()", "parameters": [], "output_shape": [[1, 1, 512, 512]], "num_parameters": []}, {"name": "cellprob_head.5", "id": 137277423592848, "class_name": "Identity()", "parameters": [], "output_shape": [[1, 1, 512, 512]], "num_parameters": []}, {"name": "gradflow_head.0", "id": 137277423586384, "class_name": "Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))", "parameters": [["weight", [32, 64, 3, 3]], ["bias", [32]]], "output_shape": [[1, 32, 512, 512]], "num_parameters": [18432, 32]}, {"name": "gradflow_head.1", "id": 137277830895760, "class_name": "Mish(inplace=True)", "parameters": [], "output_shape": [[1, 32, 512, 512]], "num_parameters": []}, {"name": "gradflow_head.2", "id": 137277425497872, "class_name": "BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [32]], ["bias", [32]]], "output_shape": [[1, 32, 512, 512]], "num_parameters": [32, 32]}, {"name": "gradflow_head.3", "id": 137277425495952, "class_name": "Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))", "parameters": [["weight", [2, 32, 3, 3]], ["bias", [2]]], "output_shape": [[1, 2, 512, 512]], "num_parameters": [576, 2]}, {"name": "gradflow_head.4", "id": 137277425486352, "class_name": "Identity()", "parameters": [], "output_shape": [[1, 2, 512, 512]], "num_parameters": []}, {"name": "gradflow_head.5", "id": 137277425489424, "class_name": "Identity()", "parameters": [], "output_shape": [[1, 2, 512, 512]], "num_parameters": []}], "edges": []}